{"ast":null,"code":"var _jsxFileName = \"/home/luist/\\xC1rea de Trabalho/noter/javascript_note/src/components/notes/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Column, Button } from \"rbx\";\nimport \"../../styles/notes.scss\";\nimport { push as Menu } from 'react-burger-menu';\nimport List from \"../notes/list\";\nimport NoteService from '../../services/note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notes = props => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [current_note, setCurrentNote] = useState({\n    title: \"\",\n    body: \"\",\n    id: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Column.Group, {\n      className: \"notes\",\n      id: \"notes\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        pageWrapId: \"notes-editor\",\n        isOpen: props.isOpen,\n        onStateChange: state => props.setIsOpen(state.isOpen),\n        disableAutoFocus: true,\n        outerContainerId: \"notes\",\n        customBurgerIcon: false,\n        customCrossIcon: false,\n        children: [/*#__PURE__*/_jsxDEV(Column.Group, {\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            size: 10,\n            offset: 1,\n            children: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"List...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        size: 12,\n        className: \"notes-editor\",\n        id: \"notes-editor\",\n        children: \"Editor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notes, \"BTxeAivSov6OpBce67mfogHl76Y=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/home/luist/Área de Trabalho/noter/javascript_note/src/components/notes/index.js"],"names":["React","Fragment","useEffect","useState","Column","Button","push","Menu","List","NoteService","Notes","props","notes","setNotes","current_note","setCurrentNote","title","body","id","isOpen","state","setIsOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,KAA/B;AACA,OAAO,yBAAP;AACA,SAASC,IAAI,IAAIC,IAAjB,QAA6B,mBAA7B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,YAAD,EAAeC,cAAf,IAAiCZ,QAAQ,CAAC;AAAEa,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,IAAI,EAAE,EAAnB;AAAuBC,IAAAA,EAAE,EAAE;AAA3B,GAAD,CAA/C;AAEA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,SAAS,EAAC,OAAxB;AAAgC,MAAA,EAAE,EAAC,OAAnC;AAAA,8BACE,QAAC,IAAD;AACE,QAAA,UAAU,EAAE,cADd;AAEE,QAAA,MAAM,EAAEP,KAAK,CAACQ,MAFhB;AAGE,QAAA,aAAa,EAAGC,KAAD,IAAWT,KAAK,CAACU,SAAN,CAAgBD,KAAK,CAACD,MAAtB,CAH5B;AAIE,QAAA,gBAAgB,MAJlB;AAKE,QAAA,gBAAgB,EAAE,OALpB;AAME,QAAA,gBAAgB,EAAE,KANpB;AAOE,QAAA,eAAe,EAAE,KAPnB;AAAA,gCASE,QAAC,MAAD,CAAQ,KAAR;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAE,EAAd;AAAkB,YAAA,MAAM,EAAE,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAmBE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,EAAd;AAAkB,QAAA,SAAS,EAAC,cAA5B;AAA2C,QAAA,EAAE,EAAC,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAhCD;;GAAMT,K;;KAAAA,K;AAkCN,eAAeA,KAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { Column, Button } from \"rbx\";\nimport \"../../styles/notes.scss\";\nimport { push as Menu } from 'react-burger-menu'\nimport List from \"../notes/list\";\nimport NoteService from '../../services/note';\n\n\nconst Notes = (props) => {\n\n  const [notes, setNotes] = useState([]);\n  const [current_note, setCurrentNote] = useState({ title: \"\", body: \"\", id: \"\" });\n\n  return (\n    <Fragment>\n      <Column.Group className=\"notes\" id=\"notes\">\n        <Menu\n          pageWrapId={\"notes-editor\"}\n          isOpen={props.isOpen}\n          onStateChange={(state) => props.setIsOpen(state.isOpen)}\n          disableAutoFocus\n          outerContainerId={\"notes\"}\n          customBurgerIcon={false}\n          customCrossIcon={false}\n        >\n          <Column.Group>\n            <Column size={10} offset={1}>\n              Search...\n            </Column>\n          </Column.Group>\n          <p>List...</p>\n        </Menu>\n\n\n        <Column size={12} className=\"notes-editor\" id=\"notes-editor\">\n          Editor...\n        </Column>\n      </Column.Group>\n    </Fragment>\n  )\n}\n\nexport default Notes;"]},"metadata":{},"sourceType":"module"}