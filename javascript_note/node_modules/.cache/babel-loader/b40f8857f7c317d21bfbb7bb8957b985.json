{"ast":null,"code":"var _jsxFileName = \"/home/luist/\\xC1rea de Trabalho/noter/javascript_note/src/components/users/user_edit_password_form/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\nimport UsersService from '../../../services/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsersEditFormPassword() {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [password_confirmation, setPasswordConfirmation] = useState(\"\");\n  const [status, setStatus] = useState(null);\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    if (password == password_confirmation) {\n      try {\n        await UsersService.updatePassword({\n          password: password\n        });\n        setStatus(\"success\");\n      } catch (err) {\n        setStatus(\"error\");\n      }\n    } else {\n      setStatus(\"error_confirmation_password\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        children: /*#__PURE__*/_jsxDEV(Control, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"has-text-grey\",\n            children: \"Senha:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: /*#__PURE__*/_jsxDEV(Control, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"has-text-grey\",\n            children: \"Repita a sua senha:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            value: password_confirmation,\n            onChange: e => setPasswordConfirmation(e.target.value),\n            required: true,\n            name: \"password_confirmation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: /*#__PURE__*/_jsxDEV(Control, {\n          children: /*#__PURE__*/_jsxDEV(Column.Group, {\n            children: /*#__PURE__*/_jsxDEV(Column, {\n              className: \"has-text-right\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"custom-purple\",\n                outlined: true,\n                children: \"Atualizar Senha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), status == \"error_update\" && /*#__PURE__*/_jsxDEV(Help, {\n        color: \"danger\",\n        children: \"Problema ao atualizar sua senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), status == \"error_confirmation_password\" && /*#__PURE__*/_jsxDEV(Help, {\n        color: \"danger\",\n        children: \"As senhas digitadas n\\xE3o s\\xE3o iguais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), status == \"success\" && /*#__PURE__*/_jsxDEV(Help, {\n        color: \"primary\",\n        children: \"Senha atualizada com sucesso!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UsersEditFormPassword, \"ORbSBcslI6NVH9z8U/9HO/JtM0E=\");\n\n_c = UsersEditFormPassword;\nexport default UsersEditFormPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersEditFormPassword\");","map":{"version":3,"sources":["/home/luist/Área de Trabalho/noter/javascript_note/src/components/users/user_edit_password_form/index.js"],"names":["React","Fragment","useState","Button","Field","Control","Input","Column","Title","Help","Label","UsersService","UsersEditFormPassword","password","setPassword","password_confirmation","setPasswordConfirmation","status","setStatus","handleSubmit","evt","preventDefault","updatePassword","err","e","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\nimport UsersService from '../../../services/users';\n\nfunction UsersEditFormPassword() {\n  const [password, setPassword] = useState(\"\");\n  const [password_confirmation, setPasswordConfirmation] = useState(\"\");\n  const [status, setStatus] = useState(null);\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n\n    if(password == password_confirmation){\n      try {\n        await UsersService.updatePassword({ password: password });\n        setStatus(\"success\")\n      } catch (err) {\n        setStatus(\"error\")\n      }\n    } else{\n      setStatus(\"error_confirmation_password\")\n    }\n\n  }\n\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n        <Field>\n          <Control>\n            <Label className=\"has-text-grey\">Senha:</Label>\n            <Input\n              type=\"password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              required\n              name=\"password\"\n            />\n          </Control>\n        </Field>\n        <Field>\n          <Control>\n            <Label className=\"has-text-grey\">Repita a sua senha:</Label>\n            <Input\n              type=\"password\"\n              value={password_confirmation}\n              onChange={e => setPasswordConfirmation(e.target.value)}\n              required\n              name=\"password_confirmation\"\n            />\n          </Control>\n        </Field>\n\n        <Field>\n          <Control>\n            <Column.Group>\n              <Column className=\"has-text-right\">\n                <Button color=\"custom-purple\" outlined>Atualizar Senha</Button>\n              </Column>\n            </Column.Group>\n          </Control>\n        </Field>\n        {status == \"error_update\" &&\n          <Help color=\"danger\">Problema ao atualizar sua senha</Help>\n        }\n        {status == \"error_confirmation_password\" &&\n          <Help color=\"danger\">As senhas digitadas não são iguais</Help>\n        }\n        {status == \"success\" &&\n          <Help color=\"primary\">Senha atualizada com sucesso!</Help>\n        }\n      </form>\n    </Fragment>\n  )\n}\n\nexport default UsersEditFormPassword;"]},"metadata":{},"sourceType":"module"}