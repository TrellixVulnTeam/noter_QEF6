{"ast":null,"code":"var _jsxFileName = \"/home/luist/\\xC1rea de Trabalho/noter/javascript_note/src/components/auth/register_form/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\nimport { Redirect } from \"react-router-dom\";\nimport UsersService from '../../../services/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterForm() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirectToLogin, setRedirectToLogin] = useState(false);\n  const [error, setError] = useState(false);\n\n  const HandleSubmit = async evt => {\n    evt.preventDefault();\n\n    try {\n      const user = await UsersService.register({\n        name: name,\n        email: email,\n        password: password\n      });\n      setRedirectToLogin(true);\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  if (redirectToLogin) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: \"/login\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 8\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Column.Group, {\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: HandleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Column, {\n          size: 12,\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              size: \"small\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"name\",\n                required: true,\n                name: \"name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              size: \"small\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                required: true,\n                name: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              size: \"small\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                required: true,\n                name: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            children: /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Column.Group, {\n                breakpoint: \"mobile\",\n                children: [/*#__PURE__*/_jsxDEV(Column, {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    onClick: e => setRedirectToLogin(true),\n                    className: \"button is-white has-text-custom-purple\",\n                    children: \"Login or\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Column, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"custom-purple\",\n                    outlined: true,\n                    children: \"Register\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(Help, {\n            color: \"danger\",\n            children: \"Email or Password invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"Yvq/KkJrw92/NNtxriXGsobJgQg=\");\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/home/luist/√Årea de Trabalho/noter/javascript_note/src/components/auth/register_form/index.js"],"names":["React","Fragment","useState","Button","Field","Control","Input","Column","Section","Help","Label","Redirect","UsersService","RegisterForm","name","setName","email","setEmail","password","setPassword","redirectToLogin","setRedirectToLogin","error","setError","HandleSubmit","evt","preventDefault","user","register","pathname","e","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\nimport { Redirect } from \"react-router-dom\";\nimport UsersService from '../../../services/users';\n\nfunction RegisterForm() {\n\nconst [name, setName] = useState(\"\");\nconst [email, setEmail] = useState(\"\");\nconst [password, setPassword] = useState(\"\");\nconst [redirectToLogin, setRedirectToLogin] = useState(false);\nconst [error, setError] = useState(false);\n\nconst HandleSubmit = async (evt) => {\n  evt.preventDefault();\n\n  try {\n    const user = await UsersService.register({name: name,email: email,password: password});\n    setRedirectToLogin(true);\n  } catch (error) {\n    setError(true)\n  }\n}\n\nif(redirectToLogin)\nreturn <Redirect to={{pathname: \"/login\"}}/>\n  \n    return (\n    <Fragment>\n        <Column.Group centered>\n          <form onSubmit={HandleSubmit}>\n            <Column size={12}>\n              <Field>\n                <Label size=\"small\">Name:</Label>\n                <Control>\n                  <Input \n                    type=\"name\"\n                    required\n                    name=\"name\"\n                    value={name}\n                    onChange={e => setName(e.target.value)}\n                  />\n                </Control>\n              </Field>\n              <Field>\n                <Label size=\"small\">Email:</Label>\n                <Control>\n                  <Input \n                    type=\"email\" \n                    required\n                    name=\"email\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                  />\n                </Control>\n              </Field>\n              <Field>\n                <Label size=\"small\">Password:</Label>\n                <Control>\n                  <Input \n                    type=\"password\" \n                    required\n                    name=\"password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                  />\n                </Control>\n              </Field>\n              <Field>\n                <Control>\n                  <Column.Group breakpoint=\"mobile\">\n                    <Column>\n                    <a onClick={e => setRedirectToLogin(true)} className=\"button is-white has-text-custom-purple\">Login or</a>\n                    </Column>\n                    <Column>\n                      <Button color=\"custom-purple\" outlined>Register</Button>\n                    </Column>\n                  </Column.Group>\n                </Control>\n              </Field>\n              { error && <Help color=\"danger\">Email or Password invalid</Help> }\n            </Column>\n          </form>\n        </Column.Group>\n    </Fragment>\n  )\n}\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}