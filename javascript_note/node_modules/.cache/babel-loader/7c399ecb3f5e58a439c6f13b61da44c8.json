{"ast":null,"code":"var _jsxFileName = \"/home/luist/\\xC1rea de Trabalho/noter/javascript_note/src/components/notes/editor/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport ReactQuill from 'react-quill'; // ES6\n\nimport 'react-quill/dist/quill.snow.css'; // ES6\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Editor(props) {\n  _s();\n\n  const [currentContent, setCurrentContent] = useState('');\n  const [timer, setTimer] = useState(null);\n\n  const updateNote = content => {\n    const title = content.replace(/(<([^>]+)>)/ig, \"\").slice(0, 30);\n    props.updateNote(props.note, {\n      'title': title,\n      'body': content\n    });\n  };\n\n  const handleChange = (content, delta, source) => {\n    clearTimeout(timer);\n\n    if (source == 'user') {\n      setCurrentContent(content);\n      setTimer(setTimeout(() => updateNote(content), 5000));\n    }\n  };\n\n  useEffect(() => {\n    setCurrentContent(props.note.body);\n  }, [props.note]);\n  const modules = {\n    toolbar: [[{\n      'header': '1'\n    }, {\n      'header': '2'\n    }, {\n      'font': []\n    }], ['bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block'], [{\n      'list': 'ordered'\n    }, {\n      'list': 'bullet'\n    }, {\n      'indent': '-1'\n    }, {\n      'indent': '+1'\n    }], ['link'], ['clean']]\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: currentContent,\n      modules: modules,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Editor, \"U4ZOxZkXbmYsjeN89466gE7sR7o=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/home/luist/Área de Trabalho/noter/javascript_note/src/components/notes/editor/index.js"],"names":["React","Fragment","useState","useEffect","ReactQuill","Editor","props","currentContent","setCurrentContent","timer","setTimer","updateNote","content","title","replace","slice","note","handleChange","delta","source","clearTimeout","setTimeout","body","modules","toolbar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AAEA,OAAOC,UAAP,MAAuB,aAAvB,C,CAAsC;;AACtC,OAAO,iCAAP,C,CAA0C;;;;AAE1C,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMS,UAAU,GAAIC,OAAD,IAAa;AAC9B,UAAMC,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgB,eAAhB,EAAiC,EAAjC,EAAqCC,KAArC,CAA2C,CAA3C,EAA8C,EAA9C,CAAd;AACAT,IAAAA,KAAK,CAACK,UAAN,CAAiBL,KAAK,CAACU,IAAvB,EAA6B;AAAC,eAASH,KAAV;AAAiB,cAAQD;AAAzB,KAA7B;AACD,GAHD;;AAKA,QAAMK,YAAY,GAAG,CAACL,OAAD,EAAUM,KAAV,EAAiBC,MAAjB,KAA4B;AAC/CC,IAAAA,YAAY,CAACX,KAAD,CAAZ;;AACA,QAAGU,MAAM,IAAI,MAAb,EAAoB;AAClBX,MAAAA,iBAAiB,CAACI,OAAD,CAAjB;AACAF,MAAAA,QAAQ,CAACW,UAAU,CAAC,MAAMV,UAAU,CAACC,OAAD,CAAjB,EAA4B,IAA5B,CAAX,CAAR;AACD;AACF,GAND;;AASAT,EAAAA,SAAS,CAAC,MAAK;AACbK,IAAAA,iBAAiB,CAACF,KAAK,CAACU,IAAN,CAAWM,IAAZ,CAAjB;AACD,GAFQ,EAEN,CAAChB,KAAK,CAACU,IAAP,CAFM,CAAT;AAIA,QAAMO,OAAO,GAAG;AACdC,IAAAA,OAAO,EAAE,CACP,CAAC;AAAE,gBAAU;AAAZ,KAAD,EAAmB;AAAC,gBAAU;AAAX,KAAnB,EAAoC;AAAE,cAAQ;AAAV,KAApC,CADO,EAEP,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,EAAwD,YAAxD,CAFO,EAGP,CAAC;AAAC,cAAQ;AAAT,KAAD,EAAsB;AAAC,cAAQ;AAAT,KAAtB,EACC;AAAC,gBAAU;AAAX,KADD,EACmB;AAAC,gBAAU;AAAX,KADnB,CAHO,EAKP,CAAC,MAAD,CALO,EAMP,CAAC,OAAD,CANO;AADK,GAAhB;AAWA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEjB,cAAnB;AAAmC,MAAA,OAAO,EAAEgB,OAA5C;AAAqD,MAAA,QAAQ,EAAEN;AAA/D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAtCQZ,M;;KAAAA,M;AAwCT,eAAeA,MAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\n\nimport ReactQuill from 'react-quill'; // ES6\nimport 'react-quill/dist/quill.snow.css'; // ES6\n\nfunction Editor(props) {\n  const [currentContent, setCurrentContent] = useState('');\n  const [timer, setTimer] = useState(null);\n\n  const updateNote = (content) => {\n    const title = content.replace(/(<([^>]+)>)/ig, \"\").slice(0, 30);\n    props.updateNote(props.note, {'title': title, 'body': content});\n  }\n\n  const handleChange = (content, delta, source) => {\n    clearTimeout(timer);\n    if(source == 'user'){\n      setCurrentContent(content);\n      setTimer(setTimeout(() => updateNote(content), 5000))\n    }\n  }\n\n\n  useEffect(()=> {\n    setCurrentContent(props.note.body)\n  }, [props.note])\n\n  const modules = {\n    toolbar: [\n      [{ 'header': '1'}, {'header': '2'}, { 'font': [] }],\n      ['bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, \n       {'indent': '-1'}, {'indent': '+1'}],\n      ['link'],\n      ['clean'],\n    ]\n  }\n\n  return (\n    <Fragment>\n      <ReactQuill value={currentContent} modules={modules} onChange={handleChange}/>\n    </Fragment>\n  )\n}\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}