{"ast":null,"code":"var _jsxFileName = \"/home/luist/\\xC1rea de Trabalho/noter/javascript_note/src/screens/notes/index/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport \"../../styles/notes.scss\";\nimport HeaderLogged from \"../../components/header_logged\";\nimport Notes from \"../../components/notes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotesScreen = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderLogged, {\n      setIsOpen: setIsOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notes, {\n      isOpen: isOpen,\n      setIsOpen: setIsOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotesScreen, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = NotesScreen;\nexport default NotesScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesScreen\");","map":{"version":3,"sources":["/home/luist/Área de Trabalho/noter/javascript_note/src/screens/notes/index/index.js"],"names":["React","Fragment","useState","HeaderLogged","Notes","NotesScreen","isOpen","setIsOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAO,yBAAP;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,sBACA,QAAC,QAAD;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAEK;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAED,MAAf;AAAuB,MAAA,SAAS,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMH,CATD;;GAAMF,W;;KAAAA,W;AAWN,eAAeA,WAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport \"../../styles/notes.scss\";\nimport HeaderLogged from \"../../components/header_logged\";\nimport Notes from \"../../components/notes\";\n\n\nconst NotesScreen = () => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    return(\n    <Fragment>\n      <HeaderLogged setIsOpen={setIsOpen}/>\n      <Notes isOpen={isOpen} setIsOpen={setIsOpen}/>\n    </Fragment>\n    )\n}\n\nexport default NotesScreen;"]},"metadata":{},"sourceType":"module"}