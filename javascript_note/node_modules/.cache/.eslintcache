[{"/home/luist/Área de Trabalho/noter/javascript_note/src/index.js":"1","/home/luist/Área de Trabalho/noter/javascript_note/src/App.js":"2","/home/luist/Área de Trabalho/noter/javascript_note/src/reportWebVitals.js":"3","/home/luist/Área de Trabalho/noter/javascript_note/src/components/header/index.js":"4","/home/luist/Área de Trabalho/noter/javascript_note/src/screens/home/index.js":"5","/home/luist/Área de Trabalho/noter/javascript_note/src/routes.js":"6","/home/luist/Área de Trabalho/noter/javascript_note/src/screens/auth/register/index.js":"7","/home/luist/Área de Trabalho/noter/javascript_note/src/screens/auth/login/index.js":"8","/home/luist/Área de Trabalho/noter/javascript_note/src/screens/users/edit/index.js":"9","/home/luist/Área de Trabalho/noter/javascript_note/src/screens/notes/index/index.js":"10","/home/luist/Área de Trabalho/noter/javascript_note/src/components/auth/register_form/index.js":"11","/home/luist/Área de Trabalho/noter/javascript_note/src/services/users.js":"12","/home/luist/Área de Trabalho/noter/javascript_note/src/services/api.js":"13","/home/luist/Área de Trabalho/noter/javascript_note/src/components/auth/login_form/index.js":"14","/home/luist/Área de Trabalho/noter/javascript_note/src/components/auth/private_route/index.js":"15","/home/luist/Área de Trabalho/noter/javascript_note/src/components/header_logged/index.js":"16","/home/luist/Área de Trabalho/noter/javascript_note/src/components/notes/index.js":"17","/home/luist/Área de Trabalho/noter/javascript_note/src/components/notes/list/index.js":"18","/home/luist/Área de Trabalho/noter/javascript_note/src/services/notes.js":"19","/home/luist/Área de Trabalho/noter/javascript_note/src/components/notes/editor/index.js":"20","/home/luist/Área de Trabalho/noter/javascript_note/src/components/notes/search/index.js":"21","/home/luist/Área de Trabalho/noter/javascript_note/src/components/users/user_edit_form/index.js":"22","/home/luist/Área de Trabalho/noter/javascript_note/src/components/users/user_edit_password_form/index.js":"23","/home/luist/Área de Trabalho/noter/javascript_note/src/components/users/user_delete/index.js":"24","/home/luist/Área de Trabalho/noter/javascript_note/src/components/header_logged_users_edit/index.js":"25"},{"size":500,"mtime":1615376921979,"results":"26","hashOfConfig":"27"},{"size":247,"mtime":1615379923427,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1615376921979,"results":"29","hashOfConfig":"27"},{"size":1259,"mtime":1615925168071,"results":"30","hashOfConfig":"27"},{"size":4933,"mtime":1615926060622,"results":"31","hashOfConfig":"27"},{"size":837,"mtime":1615400438631,"results":"32","hashOfConfig":"27"},{"size":1396,"mtime":1615926624379,"results":"33","hashOfConfig":"27"},{"size":1321,"mtime":1615926646668,"results":"34","hashOfConfig":"27"},{"size":1613,"mtime":1615826262393,"results":"35","hashOfConfig":"27"},{"size":483,"mtime":1615402494500,"results":"36","hashOfConfig":"27"},{"size":2807,"mtime":1615817392811,"results":"37","hashOfConfig":"27"},{"size":1080,"mtime":1615564982388,"results":"38","hashOfConfig":"27"},{"size":109,"mtime":1615386788537,"results":"39","hashOfConfig":"27"},{"size":2547,"mtime":1615817364140,"results":"40","hashOfConfig":"27"},{"size":334,"mtime":1615400351064,"results":"41","hashOfConfig":"27"},{"size":2817,"mtime":1615927192113,"results":"42","hashOfConfig":"27"},{"size":2583,"mtime":1615563070447,"results":"43","hashOfConfig":"27"},{"size":1747,"mtime":1615554171615,"results":"44","hashOfConfig":"27"},{"size":715,"mtime":1615562911687,"results":"45","hashOfConfig":"27"},{"size":1219,"mtime":1615560105765,"results":"46","hashOfConfig":"27"},{"size":1073,"mtime":1615563489398,"results":"47","hashOfConfig":"27"},{"size":2091,"mtime":1615825705016,"results":"48","hashOfConfig":"27"},{"size":2251,"mtime":1615825790100,"results":"49","hashOfConfig":"27"},{"size":643,"mtime":1615577983930,"results":"50","hashOfConfig":"27"},{"size":2416,"mtime":1615918802293,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"79ankl",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"54"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"54"},"/home/luist/Área de Trabalho/noter/javascript_note/src/index.js",[],["120","121"],"/home/luist/Área de Trabalho/noter/javascript_note/src/App.js",["122","123"],"import React, { Fragment } from 'react';\nimport \"./App.scss\";\nimport { Notification, Section } from 'rbx';\nimport Routes from './routes';\n\nconst App = () => (\n  <div>\n    <Fragment>\n      <Routes/>\n    </Fragment>\n  </div>\n)\n \nexport default App;\n","/home/luist/Área de Trabalho/noter/javascript_note/src/reportWebVitals.js",[],"/home/luist/Área de Trabalho/noter/javascript_note/src/components/header/index.js",["124","125"],"import React, {useState} from 'react';\nimport { Navbar, Container, Column } from 'rbx';\nimport LogoImage from '../../assets/images/logo_1.png';\nimport \"../../styles/header.scss\";\nimport { Link } from 'react-router-dom';\n\nfunction Header(){\n\n  return(\n    <Container>\n            <Navbar>\n                <Navbar.Brand>\n                    <Link to='/'>\n                        <img src={LogoImage} />\n                    </Link>\n                <Navbar.Burger />\n                </Navbar.Brand>\n                \n\n                <Navbar.Menu id=\"navbar-menu\">\n                    <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\n                        <Column.Group>\n                        <Column>\n                            <Link to=\"/register\" className=\"button is-white has-text-custom-green register-button\">Register</Link>\n                        </Column>\n                        <Column>\n                            <Link to=\"/login\" className=\"button is-outlined is-custom-green login-button\">Login</Link>\n                        </Column>\n                        </Column.Group>\n                    </Navbar.Segment>\n                </Navbar.Menu>\n            </Navbar>\n        </Container>\n  )\n}\n\nexport default Header;","/home/luist/Área de Trabalho/noter/javascript_note/src/screens/home/index.js",["126","127","128","129"],"import React, { Fragment } from 'react';\nimport PresentationImage from '../../assets/images/noter_3.png';\nimport PresentationImage2 from '../../assets/images/noter_1.png';\nimport PresentationImage3 from '../../assets/images/noter_4.png';\nimport PresentationImage4 from '../../assets/images/noter_2.png';\nimport Header from \"../../components/header\";\nimport { Column, Section, Title, Container } from \"rbx\";\nimport \"../../styles/home.scss\";\nimport { Link } from 'react-router-dom';\n\n\nconst HomeScreen = () => (\n        <Fragment>\n            <Header />\n      \n            <Section size=\"medium\" className=\"home-top\">\n              <Container>\n      \n                  <Column size={12}>\n                  <Title size={1} spaced className=\"has-text-white\">\n                    Suas notas onde você estiver\n                  </Title>\n                  <Title size={5} spaced className=\"has-text-light\" subtitle>\n                      Você nunca sabe quando uma boa ideia vai vir! Agora, você sabe onde anotar!<br/><br/>\n                  </Title>\n                  <Link to='/register' className=\"button is-outlined is-white is-large\">\n                      <strong>Registre-se grátis no Noter!</strong>\n                  </Link>\n                  </Column>\n                  \n                  <Column size={12} className=\"img-principal\">\n                      <img src={PresentationImage} />\n                  </Column>\n      \n              </Container>\n             </Section>\n      \n      \n            <Section size=\"medium\" className=\"second-section\">\n              <Container>\n                  <Column.Group>\n                  \n                      <Column size={5} className=\"section-title\">\n                        <Title size={3} spaced className=\"has-text-white\">\n                            A qualquer hora, em qualquer lugar!\n                        </Title>\n                        <Title size={6} spaced className=\"has-text-light\" subtitle>\n                            O Noter deixa suas notas salvas e guardadas, e onde e quando quiser você pode editá-las, excluí-las ou atualizá-las!    \n                        </Title>\n                      </Column>\n                      \n                      <Column size={6} className=\"img-secondary\">\n                          <img src={PresentationImage2} />\n                      </Column>\n                  </Column.Group>\n              </Container>\n             </Section>\n\n             <Section size=\"medium\" className=\"third-section\">\n              <Container>\n                  <Column.Group>\n                  \n                      <Column size={6} className=\"img-third\">\n                          <img src={PresentationImage3} />\n                      </Column>\n                      \n                      <Column size={5} className=\"section-title\">\n                        <Title size={3} spaced className=\"has-text-white\">\n                            Diversas opções de edição\n                        </Title>\n                        <Title size={6} spaced className=\"has-text-light\" subtitle>\n                            Com o nosso editor incrível, você deixa seu texto do jeito que quiser, personalizado da maneira que você preferir e de acordo com a sua criatividade.    \n                        </Title>\n                      </Column>\n                      \n                  </Column.Group>\n              </Container>\n             </Section>\n\n             <Section size=\"medium\" className=\"fourth-section\">\n              <Container>\n                  <Column.Group>\n                  \n                      <Column size={5} className=\"section-title\">\n                      <Title size={3} spaced className=\"has-text-white\">\n                          Salvamento automático\n                      </Title>\n                      <Title size={6} spaced className=\"has-text-light\" subtitle>\n                        Não se preocupe caso a internet caia e você não consiga salvar sua nota! O Noter salva sua nota depois de 3 segundos de inatividade para sua segurança!    \n                      </Title>\n                      </Column>\n                      \n                      <Column size={6} className=\"img-fourth\">\n                          <img src={PresentationImage4} />\n                      </Column>\n                  </Column.Group>\n              </Container>\n             </Section>\n\n             <Section size=\"medium\" className=\"footer\">\n              <Container>\n                  <Column.Group>\n                  \n                      <Column size={12}>\n                        <Title size={5} spaced className=\"has-text-white footer-title\">\n                            © Copyright - Desenvolvido por Tércio Luís \n                        </Title>\n                      </Column>\n\n                  </Column.Group>\n              </Container>\n             </Section>\n      \n        </Fragment>\n)\n \nexport default HomeScreen;","/home/luist/Área de Trabalho/noter/javascript_note/src/routes.js",[],"/home/luist/Área de Trabalho/noter/javascript_note/src/screens/auth/register/index.js",["130"],"import React, { Fragment } from 'react';\nimport { Column, Section, Title, Container, Card } from \"rbx\";\nimport LogoImage from '../../../assets/images/logo_1.png';\nimport \"../../../styles/auth.scss\";\nimport RegisterForm from \"../../../components/auth/register_form\";\nimport { Link } from 'react-router-dom';\n\n\nconst RegisterScreen = () => (\n  <Fragment>\n      <Section className=\"auth\">\n        <Container>\n          <Column.Group centered>\n            <Column size=\"two-fifths\">\n              <Card>\n                <Card.Content>\n                <Section>\n                  <Column.Group centered>\n                    <Column size={12}>\n                      <Link to='/'>\n                          <img src={LogoImage} className=\"logo_auth\"/>\n                      </Link>\n                    </Column>\n                  </Column.Group>\n\n                  <Column.Group>\n                    <Column size={12}>\n                      <Title size={6} className=\"has-text-grey has-text-centered\">\n                        Registre-se grátis agora mesmo!\n                      </Title>\n                    </Column>\n                  </Column.Group>\n                  <RegisterForm/>\n                </Section>\n                </Card.Content>\n              </Card>\n            </Column>\n          </Column.Group>\n        </Container>\n      </Section>\n  </Fragment>\n);\n\nexport default RegisterScreen;","/home/luist/Área de Trabalho/noter/javascript_note/src/screens/auth/login/index.js",["131"],"import React, { Fragment } from 'react';\nimport { Column, Section, Title, Container, Card} from \"rbx\";\nimport LogoImage from '../../../assets/images/logo_1.png';\nimport \"../../../styles/auth.scss\";\nimport LoginForm from \"../../../components/auth/login_form\";\nimport { Link } from 'react-router-dom';\n\n\nconst LoginScreen = () => (\n  <Fragment>\n    <Section className=\"auth\">\n      <Container>\n        <Column.Group centered>\n          <Column size=\"two-fifths\">\n            <Card>\n              <Card.Content>\n              <Section>\n                <Column.Group centered>\n                  <Column size={12}>\n                    <Link to='/'>\n                        <img src={LogoImage} className=\"logo_auth\"/>\n                    </Link>\n                  </Column>\n                </Column.Group>\n\n                <Column.Group>\n                  <Column size={12}>\n                    <Title size={6} className=\"has-text-grey has-text-centered\">\n                      Suas Notas na Nuvem... de graça!\n                    </Title>\n                  </Column>\n                </Column.Group>\n              </Section>\n              <LoginForm/>\n              </Card.Content>\n            </Card>\n          </Column>\n        </Column.Group>\n      </Container>\n    </Section>\n  </Fragment>\n);\n\nexport default LoginScreen;","/home/luist/Área de Trabalho/noter/javascript_note/src/screens/users/edit/index.js",["132"],"import React, { Fragment } from 'react';\nimport { Column, Section, Title, Container, Card, Button } from \"rbx\";\nimport \"../../../styles/users.scss\";\nimport HeaderLoggedUsersEdit from \"../../../components/header_logged_users_edit\";\nimport UsersEditForm from \"../../../components/users/user_edit_form\";\nimport UsersEditPasswordForm from \"../../../components/users/user_edit_password_form\";\nimport UsersDelete from \"../../../components/users/user_delete\";\n\n\nconst UserEditScreen = () => (\n  <Fragment>\n    <HeaderLoggedUsersEdit />\n    <Section size=\"medium\" className=\"users\">\n      <Container>\n        <Column.Group centered className=\"users-edit\">\n          <Column size=\"two-fifths\">\n            <Title size={5} className=\"has-text-grey has-text-left\">\n              Informações Pessoais\n            </Title>\n            <Card>\n              <Card.Content>\n                <UsersEditForm/>\n              </Card.Content>\n            </Card>\n          </Column>\n        </Column.Group>\n\n        <Column.Group centered className=\"users-edit\">\n          <Column size=\"two-fifths\">\n            <Title size={5} className=\"has-text-grey has-text-left\">\n              Senha\n            </Title>\n            <Card>\n              <Card.Content>\n                <UsersEditPasswordForm/>\n              </Card.Content>\n            </Card>\n          </Column>\n        </Column.Group>\n        <Column.Group centered>\n          <Column size={4} className=\"has-text-right\">\n            <UsersDelete/>\n          </Column>\n        </Column.Group>\n      </Container>\n    </Section>\n  </Fragment>\n);\n\nexport default UserEditScreen;","/home/luist/Área de Trabalho/noter/javascript_note/src/screens/notes/index/index.js",["133"],"import React, { Fragment, useState } from 'react';\nimport HeaderLogged from \"../../../components/header_logged\";\nimport { Column } from \"rbx\";\nimport \"../../../styles/notes.scss\";\nimport Notes from \"../../../components/notes\";\n\n\nconst NotesScreen = () => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    return(\n    <Fragment>\n      <HeaderLogged setIsOpen={setIsOpen}/>\n      <Notes isOpen={isOpen} setIsOpen={setIsOpen}/>\n    </Fragment>\n    )\n}\n\nexport default NotesScreen;","/home/luist/Área de Trabalho/noter/javascript_note/src/components/auth/register_form/index.js",["134","135","136"],"import React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\nimport { Redirect } from \"react-router-dom\";\nimport UsersService from '../../../services/users';\n\nfunction RegisterForm() {\n\nconst [name, setName] = useState(\"\");\nconst [email, setEmail] = useState(\"\");\nconst [password, setPassword] = useState(\"\");\nconst [redirectToLogin, setRedirectToLogin] = useState(false);\nconst [error, setError] = useState(false);\n\nconst HandleSubmit = async (evt) => {\n  evt.preventDefault();\n\n  try {\n    const user = await UsersService.register({name: name,email: email,password: password});\n    setRedirectToLogin(true);\n  } catch (error) {\n    setError(true)\n  }\n}\n\nif(redirectToLogin)\nreturn <Redirect to={{pathname: \"/login\"}}/>\n  \n    return (\n    <Fragment>\n        <Column.Group centered>\n          <form onSubmit={HandleSubmit}>\n            <Column size={12}>\n              <Field>\n                <Label size=\"small\">Nome:</Label>\n                <Control>\n                  <Input \n                    type=\"name\"\n                    required\n                    name=\"name\"\n                    value={name}\n                    onChange={e => setName(e.target.value)}\n                  />\n                </Control>\n              </Field>\n              <Field>\n                <Label size=\"small\">E-mail:</Label>\n                <Control>\n                  <Input \n                    type=\"email\" \n                    required\n                    name=\"email\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                  />\n                </Control>\n              </Field>\n              <Field>\n                <Label size=\"small\">Senha:</Label>\n                <Control>\n                  <Input \n                    type=\"password\" \n                    required\n                    name=\"password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                  />\n                </Control>\n              </Field>\n              <Field>\n                <Control>\n                  <Column.Group breakpoint=\"mobile\">\n                    <Column>\n                    <a onClick={e => setRedirectToLogin(true)} className=\"button is-white has-text-custom-purple\">Fazer Login</a>\n                    </Column>\n                    <Column>\n                      <Button color=\"custom-purple\" outlined>Registrar</Button>\n                    </Column>\n                  </Column.Group>\n                </Control>\n              </Field>\n              { error && <Help color=\"danger\">E-mail ou Senha inválida!</Help> }\n            </Column>\n          </form>\n        </Column.Group>\n    </Fragment>\n  )\n}\n\nexport default RegisterForm;","/home/luist/Área de Trabalho/noter/javascript_note/src/services/users.js",[],"/home/luist/Área de Trabalho/noter/javascript_note/src/services/api.js",[],"/home/luist/Área de Trabalho/noter/javascript_note/src/components/auth/login_form/index.js",["137","138","139","140","141"],"import React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\nimport { Redirect } from \"react-router-dom\";\nimport UsersService from '../../../services/users';\n\nfunction LoginForm() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [RedirectToRegister, setRedirectToRegister] = useState(false);\n  const [RedirectToNotes, setRedirectToNotes] = useState(false);\n  const [error, setError] = useState(false);\n\n  const HandleSubmit = async (evt) => {\n    evt.preventDefault();\n\n    try {\n      const user = await UsersService.login({email: email,password: password});\n      setRedirectToNotes(true);\n    } catch (error) {\n      setError(true);\n    }\n  }\n  \n  if(RedirectToRegister == true)\n    return <Redirect to={{pathname: \"/register\"}}/>\n  else if(RedirectToNotes == true)\n    return <Redirect to={{pathname: \"/notes\"}}/>\n\n  return (\n    <Fragment>\n        <Column.Group centered>\n        <form onSubmit={HandleSubmit}>\n            <Column size={12}>\n              <Field>\n                <Label size=\"small\">E-mail:</Label>\n                <Control>\n                  <Input \n                    type=\"email\" \n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                    required\n                    name=\"email\"\n                  />\n                </Control>\n              </Field>\n              <Field>\n                <Label size=\"small\">Senha:</Label>\n                <Control>\n                  <Input \n                    type=\"password\" \n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                    required\n                    name=\"password\"\n                  />\n                </Control>\n              </Field>\n              <Field>\n                <Control>\n                  <Column.Group>\n                    <Column>\n                      <a onClick={e => setRedirectToRegister(true)} className=\"button is-white has-text-custom-purple\">Registrar-se</a>\n                    </Column>\n                    <Column>\n                      <Button color=\"custom-purple\" outlined>Login</Button>\n                    </Column>\n                  </Column.Group>\n                </Control>\n              </Field>\n              { error && <Help color=\"danger\">E-mail ou Senha inválida!</Help> }\n            </Column>\n          </form>\n        </Column.Group>\n    </Fragment>\n  )\n}\n\nexport default LoginForm;","/home/luist/Área de Trabalho/noter/javascript_note/src/components/auth/private_route/index.js",[],"/home/luist/Área de Trabalho/noter/javascript_note/src/components/header_logged/index.js",["142","143","144","145","146","147"],"import React, { Fragment, useState } from 'react';\nimport { Navbar, Container, Column, Button, Dropdown } from 'rbx';\nimport LogoImage from '../../assets/images/logo_1.png';\nimport \"../../styles/header.scss\";\nimport UsersService from '../../services/users';\nimport { Redirect, Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faList } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction HeaderLogged(props) {\n  const [redirectToHome, setRedirectToHome] = useState(false);\n  const [user, setUser] = useState(localStorage.getItem('user'));\n\n  const logOut = async () => {\n    await UsersService.logout();\n    setRedirectToHome(true);\n  }\n\n  if (redirectToHome == true)\n    return <Redirect to={{ pathname: \"/\" }} />\n\n  return (\n    <Navbar color=\"custom-purple\" className=\"navbar-logged\">\n      <Navbar.Brand>\n        <Column.Group>\n          <Column size=\"11\" offset=\"1\">\n            <Link to=\"/notes\">\n              <img src={LogoImage} className=\"logo-header-logged\" />\n            </Link>\n          </Column>\n        </Column.Group>\n        <Navbar.Burger\n            className=\"navbar-burger burger\" \n            aria-label=\"menu\" \n            aria-expanded=\"false\" \n            data-target=\"navbar-menu\">\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n        </Navbar.Burger>\n      </Navbar.Brand>\n\n      <Navbar.Menu>\n      <Navbar.Segment as=\"div\" className=\"navbar-item navbar-start\" align=\"start\">\n        <Navbar.Item as=\"div\">\n          <Button \n            className=\"open-button\" \n            color=\"white\" \n            outlined\n            onClick={() => props.setIsOpen(true)}>\n                <FontAwesomeIcon icon={faList} />\n            </Button>\n        </Navbar.Item>\n      </Navbar.Segment>\n        <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\n          <Navbar.Item as=\"div\">\n            <Dropdown>\n              <Dropdown.Trigger>\n                <Button className=\"button\" color=\"white\" outlined>\n                  <span>{JSON.parse(user)['name']} ▼</span>\n                </Button>\n              </Dropdown.Trigger>\n              <Dropdown.Menu>\n                <Dropdown.Content>\n                  <Dropdown.Item as=\"div\">\n                    <Link to=\"/users/edit\">User Edit</Link>\n                  </Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item as=\"div\">\n                    <a href=\"#\" onClick={e => logOut()}>LogOut</a>\n                  </Dropdown.Item>\n                </Dropdown.Content>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Navbar.Item>\n        </Navbar.Segment>\n      </Navbar.Menu>\n    </Navbar>\n  )\n}\n\nexport default HeaderLogged;","/home/luist/Área de Trabalho/noter/javascript_note/src/components/notes/index.js",["148","149","150"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { Column, Button } from \"rbx\";\nimport \"../../styles/notes.scss\";\nimport { push as Menu } from 'react-burger-menu'\nimport List from \"../notes/list\";\nimport NotesService from '../../services/notes';\nimport Editor from \"../notes/editor\";\nimport Search from '../notes/search';\n\n\nconst Notes = (props) => {\n\n  const [notes, setNotes] = useState([]);\n  const [current_note, setCurrentNote] = useState({ title: \"\", body: \"\", id: \"\" });\n\n  async function fetchNotes() {\n    const response = await NotesService.index();\n    if (response.data.length >= 1) {\n      setNotes(response.data.reverse())\n      setCurrentNote(response.data[0])\n    } else {\n      setNotes([])\n    }\n  }\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  const createNote = async (params) => {\n    const note = await NotesService.create();\n    fetchNotes();\n  }\n\n  const deleteNote = async (note) => {\n    await NotesService.delete(note._id);\n    fetchNotes();\n  }\n\n  const searchNotes = async (query) => {\n    const response = await NotesService.search(query);\n    setNotes(response.data)\n  }\n\n  const updateNote = async (oldNote, params) => {\n    const updatedNote = await NotesService.update(oldNote._id, params);\n    const index = notes.indexOf(oldNote);\n    const newNotes = notes;\n    newNotes[index] = updatedNote.data;\n    setNotes(newNotes);\n    setCurrentNote(updatedNote.data);\n  }\n\n  const selectNote = (id) => {\n    const note = notes.find((note) => {\n      return note._id == id;\n    })\n    setCurrentNote(note);\n  }\n\n  return (\n    <Fragment>\n      <Column.Group className=\"notes\" id=\"notes\">\n        <Menu\n          pageWrapId={\"notes-editor\"}\n          isOpen={props.isOpen}\n          onStateChange={(state) => props.setIsOpen(state.isOpen)}\n          disableAutoFocus\n          outerContainerId={\"notes\"}\n          customBurgerIcon={false}\n          customCrossIcon={false}\n        >\n          <Column.Group>\n            <Column size={10} offset={1}>\n              <Search searchNotes={searchNotes} fetchNotes={fetchNotes} />\n            </Column>\n          </Column.Group>\n          <List\n            notes={notes}\n            selectNote={selectNote}\n            createNote={createNote}\n            deleteNote={deleteNote}\n            current_note={current_note} />\n        </Menu>\n\n\n        <Column size={12} className=\"notes-editor\" id=\"notes-editor\">\n        <Editor\n          note={current_note}\n          updateNote={updateNote}\n        />\n        </Column>\n      </Column.Group>\n    </Fragment>\n  )\n}\n\nexport default Notes;","/home/luist/Área de Trabalho/noter/javascript_note/src/components/notes/list/index.js",["151"],"import React, { Fragment } from 'react';\nimport { Button, Column, Tag, Title, List } from \"rbx\";\nimport Moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nfunction ListNotes(props) {\n  return (\n    <Fragment>\n      <Column.Group breakpoint=\"mobile\">\n        <Column size={6} offset={1}>\n          <Title size={6}>\n            {props.notes.length} Notes\n          </Title>\n        </Column>\n        <Column size={2}>\n            <Button state=\"active\" color=\"custom-purple\" outlined size=\"small\" onClick={() => props.createNote()}>\n              Notes +\n            </Button>\n          </Column>\n      </Column.Group>\n\n      <List className=\"notes-list\">\n        {props.notes.map((item, key) =>\n          <List.Item key={key} onClick={() => props.selectNote(item._id)} active={item == props.current_note}>\n            <Title size={6}>\n              {item.title.replace(/(<([^>]+)>)/ig, \"\").substring(0,15)}\n            </Title>\n            <Title size={6} subtitle spaced={false}>\n              {item.body.replace(/(<([^>]+)>)/ig, \"\").substring(0,30)}\n            </Title>\n\n            <Column.Group breakpoint=\"mobile\">\n              <Column size={10}>\n                <Tag color=\"dark\">\n                  {Moment(item.created_at).format('DD/MM')}\n                </Tag>\n              </Column>\n              <Column size={2}>\n                <FontAwesomeIcon \n                  icon={faTrash} \n                  onClick={() => props.deleteNote(item)}\n                  color=\"grey\"\n                />\n              </Column>\n            </Column.Group>\n          </List.Item>\n        )}\n      </List>\n    </Fragment>\n  )\n}\n\nexport default ListNotes;","/home/luist/Área de Trabalho/noter/javascript_note/src/services/notes.js",[],"/home/luist/Área de Trabalho/noter/javascript_note/src/components/notes/editor/index.js",["152"],"import React, { Fragment, useState, useEffect } from 'react';\n\nimport ReactQuill from 'react-quill'; // ES6\nimport 'react-quill/dist/quill.snow.css'; // ES6\n\nfunction Editor(props) {\n  const [currentContent, setCurrentContent] = useState('');\n  const [timer, setTimer] = useState(null);\n\n  const updateNote = (content) => {\n    const title = content.replace(/(<([^>]+)>)/ig, \"\").slice(0, 30);\n    props.updateNote(props.note, {'title': title, 'body': content});\n  }\n\n  const handleChange = (content, delta, source) => {\n    clearTimeout(timer);\n    if(source == 'user'){\n      setCurrentContent(content);\n      setTimer(setTimeout(() => updateNote(content), 3000))\n    }\n  }\n\n\n  useEffect(()=> {\n    setCurrentContent(props.note.body)\n  }, [props.note])\n\n  const modules = {\n    toolbar: [\n      [{ 'header': '1'}, {'header': '2'}, { 'font': [] }],\n      ['bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block'],\n      [{'list': 'ordered'}, {'list': 'bullet'}, \n       {'indent': '-1'}, {'indent': '+1'}],\n      ['link'],\n      ['clean'],\n    ]\n  }\n\n  return (\n    <Fragment>\n      <ReactQuill value={currentContent} modules={modules} onChange={handleChange}/>\n    </Fragment>\n  )\n}\n\nexport default Editor;","/home/luist/Área de Trabalho/noter/javascript_note/src/components/notes/search/index.js",["153","154"],"import React, { Fragment, useState } from 'react';\nimport { Input, Column } from \"rbx\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nfunction Search(props) {\n  const [query, setQuery] = useState(\"\")\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      props.searchNotes(query)\n    }\n  }\n\n  return (\n    <Column.Group className=\"is-vcentered\" breakpoint=\"mobile\">\n      <Column size=\"9\" offset={1}>\n        <Input type=\"text\"\n          name={query}\n          value={query}\n          placeholder=\"Search note...\"\n          onChange={(e) => setQuery(e.target.value)}\n          onKeyDown={handleKeyDown} />\n      </Column>\n      <Column mobile={2} size={1}>\n        <a href=\"#\" onClick={() => {\n            props.fetchNotes()\n            setQuery('')\n        }}>\n            <FontAwesomeIcon\n            icon={faTimes}\n            color=\"grey\"\n            className=\"is-pulled-left  \"\n            />\n        </a>\n        </Column>\n    </Column.Group>\n  )\n}\n\nexport default Search;","/home/luist/Área de Trabalho/noter/javascript_note/src/components/users/user_edit_form/index.js",["155","156","157"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\nimport UsersService from '../../../services/users';\n\nfunction UsersEditForm() {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(null);\n\n  const initializeUser = async () => {\n    const user = await JSON.parse(localStorage.getItem('user'));\n    setName(user['name']);\n    setEmail(user['email']);\n  }\n\n  useEffect(() =>{\n    initializeUser()    \n  }, [])\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n\n    try {\n      await UsersService.update({ email: email, name: name });\n      setStatus(\"success\")\n    } catch (err) {\n      setStatus(\"error\")\n    }\n  }\n\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n        <Field>\n          <Control>\n            <Label className=\"has-text-grey\">Nome Completo:</Label>\n            <Input\n              type=\"name\"\n              value={name || \"\"}\n              onChange={e => setName(e.target.value)}\n              required\n              name=\"name\"\n            />\n          </Control>\n        </Field>\n        <Field>\n          <Control>\n            <Label className=\"has-text-grey\">E-mail:</Label>\n            <Input\n              type=\"email\"\n              value={email || \"\"}\n              onChange={e => setEmail(e.target.value)}\n              required\n              name=\"email\"\n            />\n          </Control>\n        </Field>\n\n        <Field>\n          <Control>\n            <Column.Group>\n              <Column className=\"has-text-right\">\n                <Button color=\"custom-purple\" outlined>Atualizar</Button>\n              </Column>\n            </Column.Group>\n          </Control>\n        </Field>\n        {status == \"error\" &&\n          <Help color=\"danger\">Problema ao atualizar</Help>\n        }\n        {status == \"success\" &&\n          <Help color=\"primary\">Atualização feita com sucesso!</Help>\n        }\n      </form>\n    </Fragment>\n  )\n\n\n}\n\nexport default UsersEditForm;\n","/home/luist/Área de Trabalho/noter/javascript_note/src/components/users/user_edit_password_form/index.js",["158","159","160","161","162"],"import React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\nimport UsersService from '../../../services/users';\n\nfunction UsersEditFormPassword() {\n  const [password, setPassword] = useState(\"\");\n  const [password_confirmation, setPasswordConfirmation] = useState(\"\");\n  const [status, setStatus] = useState(null);\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n\n    if(password == password_confirmation){\n      try {\n        await UsersService.updatePassword({ password: password });\n        setStatus(\"success\")\n      } catch (err) {\n        setStatus(\"error\")\n      }\n    } else{\n      setStatus(\"error_confirmation_password\")\n    }\n\n  }\n\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n        <Field>\n          <Control>\n            <Label className=\"has-text-grey\">Senha:</Label>\n            <Input\n              type=\"password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              required\n              name=\"password\"\n            />\n          </Control>\n        </Field>\n        <Field>\n          <Control>\n            <Label className=\"has-text-grey\">Repita a sua senha:</Label>\n            <Input\n              type=\"password\"\n              value={password_confirmation}\n              onChange={e => setPasswordConfirmation(e.target.value)}\n              required\n              name=\"password_confirmation\"\n            />\n          </Control>\n        </Field>\n\n        <Field>\n          <Control>\n            <Column.Group>\n              <Column className=\"has-text-right\">\n                <Button color=\"custom-purple\" outlined>Atualizar Senha</Button>\n              </Column>\n            </Column.Group>\n          </Control>\n        </Field>\n        {status == \"error_update\" &&\n          <Help color=\"danger\">Problema ao atualizar sua senha</Help>\n        }\n        {status == \"error_confirmation_password\" &&\n          <Help color=\"danger\">As senhas digitadas não são iguais</Help>\n        }\n        {status == \"success\" &&\n          <Help color=\"primary\">Senha atualizada com sucesso!</Help>\n        }\n      </form>\n    </Fragment>\n  )\n}\n\nexport default UsersEditFormPassword;","/home/luist/Área de Trabalho/noter/javascript_note/src/components/users/user_delete/index.js",[],"/home/luist/Área de Trabalho/noter/javascript_note/src/components/header_logged_users_edit/index.js",["163","164","165","166","167","168","169","170"],"import React, { Fragment, useState } from 'react';\nimport { Navbar, Container, Column, Button, Dropdown } from 'rbx';\nimport LogoImage from '../../assets/images/logo_1.png';\nimport \"../../styles/header.scss\";\nimport UsersService from '../../services/users';\nimport { Redirect, Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faList } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction HeaderLoggedUsersEdit(props) {\n  const [redirectToHome, setRedirectToHome] = useState(false);\n  const [user, setUser] = useState(localStorage.getItem('user'));\n\n  const logOut = async () => {\n    await UsersService.logout();\n    setRedirectToHome(true);\n  }\n\n  if (redirectToHome == true)\n    return <Redirect to={{ pathname: \"/\" }} />\n\n  return (\n    <Navbar color=\"custom-purple\" className=\"navbar-logged\">\n      <Navbar.Brand>\n        <Column.Group>\n          <Column size=\"11\" offset=\"1\">\n            <Link to=\"/notes\">\n              <img src={LogoImage} />\n            </Link>\n          </Column>\n        </Column.Group>\n        <Navbar.Burger\n            className=\"navbar-burger burger\" \n            aria-label=\"menu\" \n            aria-expanded=\"false\" \n            data-target=\"navbar-menu\">\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n        </Navbar.Burger>\n      </Navbar.Brand>\n\n      <Navbar.Menu>\n        <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\n          <Navbar.Item as=\"div\">\n            <Dropdown>\n              <Dropdown.Trigger>\n                <Button className=\"button\" color=\"white\" outlined>\n                  <span>{JSON.parse(user)['name']} ▼</span>\n                </Button>\n              </Dropdown.Trigger>\n              <Dropdown.Menu>\n                <Dropdown.Content>\n                  <Dropdown.Item as=\"div\">\n                    <Link to=\"/users/edit\">User Edit</Link>\n                  </Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item as=\"div\">\n                    <a href=\"#\" onClick={e => logOut()}>LogOut</a>\n                  </Dropdown.Item>\n                </Dropdown.Content>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Navbar.Item>\n        </Navbar.Segment>\n      </Navbar.Menu>\n    </Navbar>\n  )\n}\n\nexport default HeaderLoggedUsersEdit;",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":22},{"ruleId":"175","severity":1,"message":"179","line":3,"column":24,"nodeType":"177","messageId":"178","endLine":3,"endColumn":31},{"ruleId":"175","severity":1,"message":"180","line":1,"column":16,"nodeType":"177","messageId":"178","endLine":1,"endColumn":24},{"ruleId":"181","severity":1,"message":"182","line":14,"column":25,"nodeType":"183","endLine":14,"endColumn":48},{"ruleId":"181","severity":1,"message":"182","line":32,"column":23,"nodeType":"183","endLine":32,"endColumn":54},{"ruleId":"181","severity":1,"message":"182","line":53,"column":27,"nodeType":"183","endLine":53,"endColumn":59},{"ruleId":"181","severity":1,"message":"182","line":64,"column":27,"nodeType":"183","endLine":64,"endColumn":59},{"ruleId":"181","severity":1,"message":"182","line":94,"column":27,"nodeType":"183","endLine":94,"endColumn":59},{"ruleId":"181","severity":1,"message":"182","line":21,"column":27,"nodeType":"183","endLine":21,"endColumn":71},{"ruleId":"181","severity":1,"message":"182","line":21,"column":25,"nodeType":"183","endLine":21,"endColumn":69},{"ruleId":"175","severity":1,"message":"184","line":2,"column":51,"nodeType":"177","messageId":"178","endLine":2,"endColumn":57},{"ruleId":"175","severity":1,"message":"185","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":16},{"ruleId":"175","severity":1,"message":"179","line":2,"column":49,"nodeType":"177","messageId":"178","endLine":2,"endColumn":56},{"ruleId":"175","severity":1,"message":"186","line":18,"column":11,"nodeType":"177","messageId":"178","endLine":18,"endColumn":15},{"ruleId":"187","severity":1,"message":"188","line":73,"column":21,"nodeType":"183","endLine":73,"endColumn":115},{"ruleId":"175","severity":1,"message":"179","line":2,"column":49,"nodeType":"177","messageId":"178","endLine":2,"endColumn":56},{"ruleId":"175","severity":1,"message":"186","line":17,"column":13,"nodeType":"177","messageId":"178","endLine":17,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":24,"column":25,"nodeType":"191","messageId":"192","endLine":24,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":26,"column":27,"nodeType":"191","messageId":"192","endLine":26,"endColumn":29},{"ruleId":"187","severity":1,"message":"188","line":62,"column":23,"nodeType":"183","endLine":62,"endColumn":120},{"ruleId":"175","severity":1,"message":"193","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"194","line":2,"column":18,"nodeType":"177","messageId":"178","endLine":2,"endColumn":27},{"ruleId":"175","severity":1,"message":"195","line":13,"column":16,"nodeType":"177","messageId":"178","endLine":13,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":20,"column":22,"nodeType":"191","messageId":"192","endLine":20,"endColumn":24},{"ruleId":"181","severity":1,"message":"182","line":29,"column":15,"nodeType":"183","endLine":29,"endColumn":69},{"ruleId":"187","severity":1,"message":"196","line":71,"column":21,"nodeType":"183","endLine":71,"endColumn":57},{"ruleId":"175","severity":1,"message":"184","line":2,"column":18,"nodeType":"177","messageId":"178","endLine":2,"endColumn":24},{"ruleId":"175","severity":1,"message":"197","line":31,"column":11,"nodeType":"177","messageId":"178","endLine":31,"endColumn":15},{"ruleId":"189","severity":1,"message":"190","line":56,"column":23,"nodeType":"191","messageId":"192","endLine":56,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":25,"column":88,"nodeType":"191","messageId":"192","endLine":25,"endColumn":90},{"ruleId":"189","severity":1,"message":"190","line":17,"column":15,"nodeType":"191","messageId":"192","endLine":17,"endColumn":17},{"ruleId":"175","severity":1,"message":"193","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"196","line":26,"column":9,"nodeType":"183","endLine":29,"endColumn":12},{"ruleId":"175","severity":1,"message":"198","line":2,"column":49,"nodeType":"177","messageId":"178","endLine":2,"endColumn":54},{"ruleId":"189","severity":1,"message":"190","line":68,"column":17,"nodeType":"191","messageId":"192","endLine":68,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":71,"column":17,"nodeType":"191","messageId":"192","endLine":71,"endColumn":19},{"ruleId":"175","severity":1,"message":"198","line":2,"column":49,"nodeType":"177","messageId":"178","endLine":2,"endColumn":54},{"ruleId":"189","severity":1,"message":"190","line":13,"column":17,"nodeType":"191","messageId":"192","endLine":13,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":63,"column":17,"nodeType":"191","messageId":"192","endLine":63,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":66,"column":17,"nodeType":"191","messageId":"192","endLine":66,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":69,"column":17,"nodeType":"191","messageId":"192","endLine":69,"endColumn":19},{"ruleId":"175","severity":1,"message":"193","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"194","line":2,"column":18,"nodeType":"177","messageId":"178","endLine":2,"endColumn":27},{"ruleId":"175","severity":1,"message":"199","line":7,"column":10,"nodeType":"177","messageId":"178","endLine":7,"endColumn":25},{"ruleId":"175","severity":1,"message":"200","line":8,"column":10,"nodeType":"177","messageId":"178","endLine":8,"endColumn":16},{"ruleId":"175","severity":1,"message":"195","line":13,"column":16,"nodeType":"177","messageId":"178","endLine":13,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":20,"column":22,"nodeType":"191","messageId":"192","endLine":20,"endColumn":24},{"ruleId":"181","severity":1,"message":"182","line":29,"column":15,"nodeType":"183","endLine":29,"endColumn":38},{"ruleId":"187","severity":1,"message":"196","line":60,"column":21,"nodeType":"183","endLine":60,"endColumn":57},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'Notification' is defined but never used.","Identifier","unusedVar","'Section' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Column' is defined but never used.","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Fragment' is defined but never used.","'Container' is defined but never used.","'setUser' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'note' is assigned a value but never used.","'Title' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faList' is defined but never used.","no-global-assign","no-unsafe-negation"]